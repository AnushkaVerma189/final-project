/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-09-25 13:32:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.adminPages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import java.lang.*;
import dao.Question;

public final class editTest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("dao.Question");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Edit Test</title>\n");
      out.write("<style>\n");
      out.write("    body {\n");
      out.write("        font-family: Arial, sans-serif;\n");
      out.write("        margin: 0;\n");
      out.write("        padding: 0;\n");
      out.write("        background-color: #f2f2f2;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .container {\n");
      out.write("        max-width: 800px;\n");
      out.write("        margin: 40px auto;\n");
      out.write("        background-color: #fff;\n");
      out.write("        padding: 20px;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    h2 {\n");
      out.write("        margin-top: 0;\n");
      out.write("        text-align: center;\n");
      out.write("        color: #333;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .question-item {\n");
      out.write("    position: relative;\n");
      out.write("    border: 1px solid #ddd;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    padding: 20px;\n");
      out.write("    margin-bottom: 20px;\n");
      out.write("    background-color: lightgray;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".close-icon {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 5px;\n");
      out.write("    right: 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    width: 23px; /* Adjust the size of the icon */\n");
      out.write("    height: 23px; /* Adjust the size of the icon */\n");
      out.write("    background-color: red; /* Set the background color to red */\n");
      out.write("    border-radius: 5px; /* Make the icon circular */\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    align-items: center;\n");
      out.write("    color: white; /* Set the color of the icon to white */\n");
      out.write("    font-size: 14px; /* Adjust the font size of the icon */\n");
      out.write("    transition: background-color 0.3s, color 0.3s; /* Add transition effects */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".close-icon:hover {\n");
      out.write("    background-color: darkred; /* Change the background color on hover */\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    .question-item h3 {\n");
      out.write("        margin-top: 0;\n");
      out.write("        color: #333;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .question-item input[type=\"text\"] {\n");
      out.write("        width: 100%;\n");
      out.write("        padding: 8px;\n");
      out.write("        margin-top: 5px;\n");
      out.write("        border: 1px solid #ccc;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        max-width: 700px;\n");
      out.write("        margin-right: 100px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .question-item input[type=\"number\"] {\n");
      out.write("        width: 50px;\n");
      out.write("        padding: 8px;\n");
      out.write("        margin-top: 5px;\n");
      out.write("        border: 1px solid #ccc;\n");
      out.write("        border-radius: 5px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .dashboard-btn {\n");
      out.write("        display: block;\n");
      out.write("        margin: 20px auto 0;\n");
      out.write("        padding: 10px 20px;\n");
      out.write("        background-color: #8080ff;\n");
      out.write("        color: black;\n");
      out.write("        border: none;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        cursor: pointer;\n");
      out.write("        transition: font-size 0.5s;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .dashboard-btn:hover, .add-ques:hover {\n");
      out.write("        background-color: #6643b5;\n");
      out.write("        font-size: 16px;\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .save-btn {\n");
      out.write("        display: block;\n");
      out.write("        margin: 20px auto 0;\n");
      out.write("        padding: 10px 20px;\n");
      out.write("        background-color: #8080ff;\n");
      out.write("        color: white;\n");
      out.write("        border: none;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        cursor: pointer;\n");
      out.write("        transition: font-size 0.5s;\n");
      out.write("        font-size: 15px;\n");
      out.write("    }\n");
      out.write("    .add-ques {\n");
      out.write("    	display: block;\n");
      out.write("        padding: 8px 15px;\n");
      out.write("        font-size: 15px;\n");
      out.write("        background-color: #8080ff;\n");
      out.write("        color: black;\n");
      out.write("        border: none;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        cursor: pointer;\n");
      out.write("        transition: font-size 0.5s;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .save-btn:hover {\n");
      out.write("        background-color: #6643b5;\n");
      out.write("        font-size: 17px;\n");
      out.write("    }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    ");

        HttpSession session2 = request.getSession(false);
        if (session2 != null && session2.getAttribute("username") != null) {
        	int test_id = (int)session.getAttribute("test_id");
        	int passmarks = (int)request.getAttribute("pass_marks");
        	String topic = (String)request.getAttribute("topic");
        	String lang = (String)request.getAttribute("lang");
            ArrayList<Question> questions = (ArrayList<Question>) request.getAttribute("questions");
    
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("    \n");
      out.write("        <h2>Edit Questions</h2>\n");
      out.write("        \n");
      out.write("        <form id=\"questionForm\" action=\"/TakeTest/DummyQues\" method=\"post\">\n");
      out.write("        	<input type=\"hidden\" name=\"test_id\" value=\"");
      out.print( test_id );
      out.write("\">\n");
      out.write("			<button type=\"submit\" class=\"add-ques\" id=\"addQuestionBtn\">Add a new Question</button>\n");
      out.write("		</form>\n");
      out.write("		<br>\n");
      out.write("        \n");
      out.write("        <form id=\"editQuestionForm\" action=\"/TakeTest/UpdateTest\" method=\"post\">\n");
      out.write("        \n");
      out.write("            <label for=\"pass_marks\">Pass Marks:</label>\n");
      out.write("            <input type=\"number\" id=\"pass_marks>\" name=\"pass_marks\" value=\"");
      out.print( passmarks );
      out.write("\" style=\"margin-bottom: 15px;\" required min=\"0\" max=\"");
      out.print( questions.size() );
      out.write("\" > \n");
      out.write("            \n");
      out.write("            <label for=\"lang\">Language:</label>           \n");
      out.write("            <input type=\"text\" id=\"lang>\" name=\"lang\" value=\"");
      out.print( lang );
      out.write("\" style=\"margin-bottom: 15px;\" required maxlength=\"20\" >\n");
      out.write("            \n");
      out.write("            <label for=\"topic\">Test Topic:</label>\n");
      out.write("            <input type=\"text\" id=\"topic\" name=\"topic\" value=\"");
      out.print( topic );
      out.write("\" style=\"margin-bottom: 15px;\" required maxlength=\"20\" >\n");
      out.write("            \n");
      out.write("            <input type=\"hidden\" id=\"num_ques\" name=\"num_ques\" value=\"");
      out.print( questions.size() );
      out.write("\">\n");
      out.write("            \n");
      out.write("        ");
 
            if (questions.size() != 0) {
                int serialNumber = 1;
                for (Question ques : questions) {
        
      out.write("\n");
      out.write("        <div class=\"question-item\">\n");
      out.write("        \n");
      out.write("        <span class=\"close-icon\"  onclick=\"deleteQues(");
      out.print( ques.getQuesId());
      out.write(")\">X</span>\n");
      out.write("            <h3>Question ");
      out.print( serialNumber );
      out.write(":</h3>\n");
      out.write("            <input type=\"hidden\" name=\"questionId");
      out.print( serialNumber );
      out.write("\" value=\"");
      out.print( ques.getQuesId() );
      out.write("\">\n");
      out.write("            \n");
      out.write("            <label for=\"question");
      out.print( serialNumber );
      out.write("\" style=\"font-size: 14px;\">Question text:</label>\n");
      out.write("            <input type=\"text\" id=\"question");
      out.print( serialNumber );
      out.write("\" name=\"ques_text");
      out.print( serialNumber );
      out.write("\" value=\"");
      out.print( ques.getQuesText() );
      out.write("\" style=\"margin-bottom: 5px;\" required>\n");
      out.write("            \n");
      out.write("            <label for=\"option1");
      out.print( serialNumber );
      out.write("\" style=\"font-size: 14px;\">Option 1:</label>\n");
      out.write("            <input type=\"text\" id=\"option1");
      out.print( serialNumber );
      out.write("\" name=\"option1");
      out.print( serialNumber );
      out.write("\" value=\"");
      out.print( ques.getOption1() );
      out.write("\" style=\"margin-bottom: 5px;\" required>\n");
      out.write("            \n");
      out.write("            <label for=\"option2");
      out.print( serialNumber );
      out.write("\" style=\"font-size: 14px;\">Option 2:</label>\n");
      out.write("            <input type=\"text\" id=\"option2");
      out.print( serialNumber );
      out.write("\" name=\"option2");
      out.print( serialNumber );
      out.write("\" value=\"");
      out.print( ques.getOption2() );
      out.write("\" style=\"margin-bottom: 5px;\" required>\n");
      out.write("            \n");
      out.write("            <label for=\"option3");
      out.print( serialNumber );
      out.write("\" style=\"font-size: 14px;\">Option 3:</label>\n");
      out.write("            <input type=\"text\" id=\"option3");
      out.print( serialNumber );
      out.write("\" name=\"option3");
      out.print( serialNumber );
      out.write("\" value=\"");
      out.print( ques.getOption3() );
      out.write("\" style=\"margin-bottom: 5px;\" required>\n");
      out.write("            \n");
      out.write("            <label for=\"option4");
      out.print( serialNumber );
      out.write("\" style=\"font-size: 14px;\">Option 4:</label>\n");
      out.write("            <input type=\"text\" id=\"option4");
      out.print( serialNumber );
      out.write("\" name=\"option4");
      out.print( serialNumber );
      out.write("\" value=\"");
      out.print( ques.getOption4() );
      out.write("\" style=\"margin-bottom: 5px;\" required>\n");
      out.write("            \n");
      out.write("            <label for=\"correctAnswer");
      out.print( serialNumber );
      out.write("\" style=\"font-size: 14px;\">Correct Answer:</label>\n");
      out.write("            <input type=\"number\" id=\"correctAnswer");
      out.print( serialNumber );
      out.write("\" name=\"correctAnswer");
      out.print( serialNumber );
      out.write("\" value=\"");
      out.print( ques.getCorrectAnswer() );
      out.write("\" style=\"margin-bottom: 5px;\" required min=\"1\" max=\"4\">\n");
      out.write("        </div>\n");
      out.write("        ");
 
                serialNumber++; 
                } 
            } 
        
      out.write("\n");
      out.write("        \n");
      out.write("        \n");
      out.write("    \n");
      out.write("   		 <button type=\"submit\" class=\"save-btn\">Save Changes</button>\n");
      out.write("    </form>\n");
      out.write("    	<button class=\"dashboard-btn\" onclick=\"redirectToDashboard()\">Back to Dashboard</button>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("    \n");
      out.write("    function isAnyInputEmpty() {\n");
      out.write("        var inputs = document.querySelectorAll('input');\n");
      out.write("        for (var i = 0; i < inputs.length; i++) {\n");
      out.write("            if (inputs[i].value.trim() === '') {\n");
      out.write("                return true;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function redirectToDashboard() {\n");
      out.write("        if (isAnyInputEmpty()) {\n");
      out.write("            alert(\"Please fill in all the required fields before going back to the dashboard.\");\n");
      out.write("        } else {\n");
      out.write("            window.location.href = '/TakeTest/AdminDashboard';\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("       \n");
      out.write("        function deleteQues(quesId) {\n");
      out.write("            var confirmDelete = confirm(\"Are you sure you want to delete this question?\");\n");
      out.write("            if (confirmDelete) {\n");
      out.write("        	    window.location.href = \"/TakeTest/DeleteTest?what=ques&ques_id=\" + quesId;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("    \n");
      out.write("            ");

        } else response.sendRedirect("/TakeTest/adminPages/adminLogin.jsp");
    
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
