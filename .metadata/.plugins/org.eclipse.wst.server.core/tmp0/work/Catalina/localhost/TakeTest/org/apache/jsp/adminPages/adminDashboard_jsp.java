/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-09-25 13:12:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.adminPages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import java.lang.*;
import dao.Test;

public final class adminDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("dao.Test");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Admin Dashboard</title>\n");
      out.write("<style>\n");
      out.write("body {\n");
      out.write("	font-family: Arial, sans-serif;\n");
      out.write("	margin: 0;\n");
      out.write("	padding: 0;\n");
      out.write("	background-color: #f2f2f2;\n");
      out.write("	background-color: #ffffff;\n");
      out.write("}\n");
      out.write("\n");
      out.write("header {\n");
      out.write("	background-color: #333;\n");
      out.write("	color: #fff;\n");
      out.write("	padding: 10px 20px;\n");
      out.write("	display: flex;\n");
      out.write("	justify-content: space-between;\n");
      out.write("	align-items: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("header h1 {\n");
      out.write("	margin: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".header-buttons {\n");
      out.write("	display: flex;\n");
      out.write("	align-items: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".header-buttons a {\n");
      out.write("	color: #fff;\n");
      out.write("	text-decoration: none;\n");
      out.write("	padding: 5px 10px;\n");
      out.write("	margin-left: 10px;\n");
      out.write("	border: 1px solid #fff;\n");
      out.write("	border-radius: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".header-buttons a:hover {\n");
      out.write("	background-color: #6643b5;\n");
      out.write("	color: #333;\n");
      out.write("	border: 1px solid #f5b700;\n");
      out.write("	border-radius: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".container {\n");
      out.write("	background-color: lightgray;\n");
      out.write("	width: 80vw;\n");
      out.write("	margin: 80px auto 20px;\n");
      out.write("	padding: 20px;\n");
      out.write("	background-color: #f2f2f2;\n");
      out.write("	border-radius: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("table {\n");
      out.write("	width: 100%;\n");
      out.write("	border-collapse: collapse;\n");
      out.write("}\n");
      out.write("\n");
      out.write("th, td {\n");
      out.write("	border: 1px solid #ddd;\n");
      out.write("	border: 1px solid darkgray;\n");
      out.write("	padding: 8px;\n");
      out.write("	text-align: left;\n");
      out.write("}\n");
      out.write("\n");
      out.write("th {\n");
      out.write("	background-color: #333;\n");
      out.write("	color: #fff;\n");
      out.write("}\n");
      out.write("\n");
      out.write("tr:nth-child(even) {\n");
      out.write("	background-color: #f2f2f2;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn {\n");
      out.write("	padding: 6px 10px;\n");
      out.write("	background-color: #8080ff;\n");
      out.write("	color: black;\n");
      out.write("	font-size: 13px;\n");
      out.write("	border: none;\n");
      out.write("	border-radius: 5px;\n");
      out.write("	cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".logout-btn {\n");
      out.write("	padding: 6px 10px;\n");
      out.write("	background-color: #6643b5;\n");
      out.write("	color: #fff;\n");
      out.write("	border: none;\n");
      out.write("	border-radius: 5px;\n");
      out.write("	cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#displaymsg{\n");
      out.write("	font-size: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn:hover {\n");
      out.write("	background-color: #6643b5;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	");

	HttpSession session2 = request.getSession(false);
	if (session2 != null && session2.getAttribute("username") != null) {
		ArrayList<Test> tests = (ArrayList<Test>) request.getAttribute("tests");
		ArrayList<String> allTopics = (ArrayList<String>) request.getAttribute("allTopics");
		ArrayList<String> allLang = (ArrayList<String>) request.getAttribute("allLang");
	
      out.write("\n");
      out.write("\n");
      out.write("	<header>\n");
      out.write("		<h1>\n");
      out.write("			Skill<span style=\"color: rgb(255, 0, 128);\">Edge</span>\n");
      out.write("		</h1>\n");
      out.write("		<div class=\"header-buttons\">\n");
      out.write("			<a href=\"/TakeTest/adminPages/addTest.jsp\">Add New Test</a> \n");
      out.write("			<a href=\"./Logout\" onclick=\"return confirmLogout();\">Logout</a>\n");
      out.write("		</div>\n");
      out.write("	</header>\n");
      out.write("\n");
      out.write("	<div class=\"container\">\n");
      out.write("		<h2>Display All Tests</h2>\n");
      out.write("		\n");
      out.write("		<div style=\"margin-bottom: 10px;\">\n");
      out.write("		<form action=\"/TakeTest/FilterTest\" method=\"post\">\n");
      out.write("	\n");
      out.write("            <input type=\"hidden\" id=\"person\" name=\"person\" value=\"admin\" >\n");
      out.write("			<label for=\"languageSelect\">Select Language:</label> <select id=\"languageSelect\" name=\"languageSelect\">\n");
      out.write("			<option value=\"all\" selected>All</option>\n");
      out.write("			");
 
				for(String lang: allLang){
			
      out.write("\n");
      out.write("				<option value = \"");
      out.print( lang);
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print( lang);
      out.write("  </option>\n");
      out.write("			");

				}
			
      out.write("\n");
      out.write("			\n");
      out.write("			</select> <label for=\"topicSelect\" style=\"margin-left: 10px;\">Select Topic:</label> <select id=\"topicSelect\" name=\"topicSelect\">\n");
      out.write("			<option value=\"all\" selected>All</option>\n");
      out.write("			\n");
      out.write("			");
 
				for(String topic: allTopics){
			
      out.write("\n");
      out.write("				<option value = \"");
      out.print( topic);
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print( topic);
      out.write("  </option>\n");
      out.write("			");

				}
			
      out.write("\n");
      out.write("			</select>\n");
      out.write("			<label for=\"DifficultyLevel\" style=\"margin-left: 10px;\">Select Difficulty Level:</label> <select id=\"DifficultyLevel\" name=\"DifficultyLevel\">\n");
      out.write("			<option value=\"all\" selected>All</option>\n");
      out.write("			<option value = \"easy\"> Easy </option>\n");
      out.write("			<option value = \"medium\"> Medium  </option>\n");
      out.write("			<option value = \"hard\"> Hard </option>\n");
      out.write("			</select>\n");
      out.write("\n");
      out.write("			<button class=\"btn\" onclick=\"searchTests()\" style=\"margin-left: 15px;\">Search</button>\n");
      out.write("			</form>\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("		");
 if(tests.size() > 0) { 
      out.write("\n");
      out.write("\n");
      out.write("		<table>\n");
      out.write("			<tr>\n");
      out.write("				<th>S. No</th>\n");
      out.write("				<th>Tag</th>\n");
      out.write("				<th>No of Questions</th>\n");
      out.write("				<th>No of People Who Took the Test</th>\n");
      out.write("				<th>Language</th>\n");
      out.write("				<th>Topic</th>\n");
      out.write("				<th>Difficulty Level</th>\n");
      out.write("				<th>Action</th>\n");
      out.write("			</tr>\n");
      out.write("			");

				int serialNumber = 1;
				for (Test test : tests) {
			
      out.write("\n");
      out.write("			<tr>\n");
      out.write("				<td>");
      out.print(serialNumber++);
      out.write("</td>\n");
      out.write("				<td>");
      out.print(test.getTestTag());
      out.write("</td>\n");
      out.write("				<td>");
      out.print(test.getNoOfQuestions());
      out.write("</td>\n");
      out.write("				<td>");
      out.print(test.getNoOfCandidates());
      out.write("</td>\n");
      out.write("				<td>");
      out.print(test.getLang());
      out.write("</td>\n");
      out.write("				<td>");
      out.print(test.getTopic());
      out.write("</td>\n");
      out.write("				<td>");
      out.print(test.getLevel() );
      out.write("</td>\n");
      out.write("				<td>\n");
      out.write("					<button class=\"btn\" onclick=\"editTest(");
      out.print(test.getTestId());
      out.write(")\">\n");
      out.write("						<img width=\"20\" height=\"20\"\n");
      out.write("							src=\"https://img.icons8.com/ios/20/pen.png\" alt=\"waste\" />\n");
      out.write("					</button>\n");
      out.write("					<button class=\"logout-btn\" id=\"deleteTestButton\"\n");
      out.write("						onclick=\"deleteTest(");
      out.print(test.getTestId());
      out.write(")\">\n");
      out.write("						<img width=\"20\" height=\"20\"\n");
      out.write("							src=\"https://img.icons8.com/ios/20/000000/waste.png\" alt=\"waste\" />\n");
      out.write("					</button>\n");
      out.write("\n");
      out.write("				</td>\n");
      out.write("			</tr>\n");
      out.write("			");

			}
			
      out.write("\n");
      out.write("		</table>\n");
      out.write("		");

		} else {
		
      out.write("\n");
      out.write("\n");
      out.write("		<p id = \"displaymsg\">No tests available.</p>\n");
      out.write("\n");
      out.write("		");

		}
		
      out.write("\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<script>\n");
      out.write("    \n");
      out.write("    function editTest(testId) {\n");
      out.write("        const form = document.createElement('form');\n");
      out.write("        form.setAttribute('method', 'post');\n");
      out.write("        form.setAttribute('action', '/TakeTest/EditTest');\n");
      out.write("\n");
      out.write("        const testIdInput = document.createElement('input');\n");
      out.write("        testIdInput.setAttribute('type', 'hidden');\n");
      out.write("        testIdInput.setAttribute('name', 'test_id');\n");
      out.write("        testIdInput.setAttribute('value', testId);\n");
      out.write("\n");
      out.write("        form.appendChild(testIdInput);\n");
      out.write("        document.body.appendChild(form);\n");
      out.write("        form.submit();\n");
      out.write("    } \n");
      out.write("\n");
      out.write("\n");
      out.write("    function deleteTest(testId){\n");
      out.write("    	if (confirmTestDeletion()) {\n");
      out.write("    	    window.location.href = \"/TakeTest/DeleteTest?what=test&test_id=\" + testId;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function confirmTestDeletion() {\n");
      out.write("        return confirm(\"Are you sure you want to delete this test?\");\n");
      out.write("    }	\n");
      out.write("    \n");
      out.write("    function confirmLogout(){\n");
      out.write("    	return confirm(\"Do you want to log out?\");\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("	");

	} else
	response.sendRedirect("/TakeTest/adminPages/adminLogin.jsp");
	
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
