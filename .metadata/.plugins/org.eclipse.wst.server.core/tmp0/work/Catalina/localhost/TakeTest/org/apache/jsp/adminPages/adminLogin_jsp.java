/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-09-25 11:34:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.adminPages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class adminLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Login to TakeTest</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"AdminResources/fonts/icomoon/style.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"AdminResources/css/owl.carousel.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"AdminResources/css/bootstrap.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"AdminResources/css/newStyle.css\">\n");
      out.write("    \n");
      out.write("    <style>\n");
      out.write("        .btn-link {\n");
      out.write("            display: inline-block;\n");
      out.write("            padding: 5px 10px;\n");
      out.write("            margin-top: 10px;\n");
      out.write("            color: white !important;\n");
      out.write("            background-color: #8080ff;\n");
      out.write("            border: 1px solid #8080ff;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            text-decoration: none !important;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-link:hover {\n");
      out.write("            background-color: #6643b5;\n");
      out.write("            color:black !important;\n");
      out.write("            border: 1px solid #6643b5;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-link:focus, .btn-link:hover, .btn-link:active {\n");
      out.write("            text-decoration: none;\n");
      out.write("            outline: none;\n");
      out.write("            border: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-group {\n");
      out.write("            margin-bottom: 15px !important; /* Reduced margin-bottom */\n");
      out.write("            border-width: 0px !important;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-group .form-control {\n");
      out.write("            height: 30px; /* Reduced height */\n");
      out.write("            padding-bottom: 10px !important;\n");
      out.write("            border-bottom: solid #000 !important;\n");
      out.write("            \n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"d-lg-flex half\">\n");
      out.write("    <div class=\"bg order-1 order-md-2\" style=\"background-image: url('../WE.png');\"></div>\n");
      out.write("    <div class=\"contents order-2 order-md-1\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"row align-items-center justify-content-center\">\n");
      out.write("                <div class=\"col-md-7\">\n");
      out.write("                    <h1>Login as <br><strong><span style=\"color: #ff5757; font-size: 4rem;\">Admin</span></strong></h1>\n");
      out.write("                    <form action=\"/TakeTest/AdminLogin\" method=\"post\" onsubmit=\"return validateForm()\">\n");
      out.write("                        <div class=\"form-group first\" style=\"border: 2px solid #ccc; border-radius: 10px; padding: 10px; margin-bottom: 15px;\">\n");
      out.write("                            <label for=\"username\"><b>Enter your username</b></label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" placeholder=\"Username \" id=\"username\" name=\"username\" required style=\"border-radius: 5px;\">\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group last mb-3\" style=\"border: 2px solid #ccc; border-radius: 10px; padding: 10px; margin-bottom: 15px;\">\n");
      out.write("                            <label for=\"password\"><b>Enter your password</b></label>\n");
      out.write("                            <input type=\"password\" class=\"form-control\" placeholder=\"Password\" id=\"password\" name=\"password\" required style=\"border-radius: 5px;\">\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <input type=\"submit\" value=\"Log In\" class=\"btn btn-block btn-warning\">\n");
      out.write("                    </form>\n");
      out.write("                    <p id=\"error\" style=\"color: red;\"></p>\n");
      out.write("                    ");
 
                        String error = request.getParameter("error");
                        if(error != null && error.equals("1")){
                    
      out.write("\n");
      out.write("                    <p style=\"color: red;\">Invalid username or password. Try again</p>\n");
      out.write("                    ");

                        }
                    
      out.write("\n");
      out.write("                    <div class=\"text-center\">\n");
      out.write("                        <a href=\"/TakeTest/home.jsp\" class=\"btn-link\">Back to Home</a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script src=\"AdminResources/js/jquery-3.3.1.min.js\"></script>\n");
      out.write("<script src=\"AdminResources/js/popper.min.js\"></script>\n");
      out.write("<script src=\"AdminResources/js/bootstrap.min.js\"></script>\n");
      out.write("<script src=\"AdminResources/js/main.js\"></script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    function validateForm() {\n");
      out.write("        var username = document.getElementById(\"username\").value;\n");
      out.write("        var password = document.getElementById(\"password\").value;\n");
      out.write("        if (username.length > 20) {\n");
      out.write("            document.getElementById(\"error\").innerHTML = \"Username should not exceed 20 characters.\";\n");
      out.write("            return false;\n");
      out.write("        }\n");
      out.write("        return true;\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
